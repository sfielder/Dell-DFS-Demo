<apex:page controller="nitro.NitroFeaturedItems"  action="{!init}">
   <link href="https://assets2.bunchball.net/widgets/salesforce/{!buildVersion}/nitro_reset.css" rel="stylesheet" type="text/css"></link>
   <link href="https://assets2.bunchball.net/widgets/salesforce/{!buildVersion}/nitroforsalesforce.css" rel="stylesheet" type="text/css"></link>
   <script src="https://assets2.bunchball.net/widgets/salesforce/{!buildVersion}/jquery.1.6.1.bunchball.min.js"></script>
   <script>
   if(typeof nitro$ !== 'function'){
      var nitro$ = bunchball_jQuery.noConflict();
   }
   var libVersion = {!libVersion};
   </script>
   <script>document.write('<scr' + 'ipt src="https://assets2.bunchball.net/widgets/salesforce/{!buildVersion}/nitroforsalesforce.libs.bunchball.js?r='+libVersion+'" type="text/javascript"></scr' + 'ipt>');</script>
   
   <apex:pageMessages id="pageMessages" />
   
   <div class="nitro">
      <div class="nitro_page_body" id="nitro_sf_admin_featured_items">

         <div id="nitro_sf_admin_featured_items_module" class="content_module">
            <h2>Featured Items</h2>    
            <p class="descriptive_text">These items will be displayed in the Nitro Sidebar.</p>
            <div class="content_module_body">
               <div id="nitro_sf_admin_featured_items_body">
                  
                  <!-- Roles -->
                  <div id="nitro_sf_admin_featured_items_roles">
                     <h3>Roles</h3>
                     <div id="nitro_sf_admin_featured_items_role_list">
                        <ul>
                        </ul>
                     </div>
                  </div><!--  end roles -->              
                          
                  <!-- Featured Items -->          
                  <div id="nitro_sf_admin_featured_items_right_column">
                  
                     <!-- Challenges -->
                     <div id="nitro_sf_admin_featured_items_challenges">
                        <h3>Featured Challenges</h3>
                        <ul>     
                           <li><h4>#1</h4><select id="nitro_sf_admin_featured_items_challenge_selection_1"></select></li>
                           <li><h4>#2</h4><select id="nitro_sf_admin_featured_items_challenge_selection_2"></select></li>
                           <li><h4>#3</h4><select id="nitro_sf_admin_featured_items_challenge_selection_3"></select></li>
                        </ul>
                        <p class="nitro_sf_admin_descriptive_right">Choose 3 challenges to feature in the sidebar. 
                        Once a user completes their first one, they'll be shown the second one, and so on. 
                        <b>NITRO PICKS</b> means the system will pick the next challenge. If no Challenges are defined for a role, 
                        that user will be shown the challenges assigned to <b>EVERYONE</b>.</p>
                     </div> <!--  end challenges -->
   
                     <!-- Reward -->
                     <div id="nitro_sf_admin_featured_items_reward">
                        <h3>Featured Reward</h3>
                        <ul>
                           <li><h4></h4><select id="nitro_sf_admin_featured_items_reward_selection"></select></li>
                        </ul> 
                        <p class="nitro_sf_admin_descriptive_right">
                        Choose a reward to feature on your usersâ€™ Nitro sidebar. 
                        You can select the option for <b>EVERYONE</b> to show the same featured reward to all users, or customize the featured reward by role. 
                        Select the reward you want to show on the sidebar from the pull-down menu; to feature no reward on the sidebar, select <b>NONE</b>. 
                        Repeat this process for each role.
                     </p>
                     </div> <!--  end reward -->
                     
                     <button id="save_featured_item_btn" class="admin_button accept_button">save</button>
                     <img src="https://assets2.bunchball.net/widgets/salesforce/{!buildVersion}/images/ajaxloadsmall.gif" style="display:none" id="save_load_indicator"/>
                  </div> <!--  end right column -->
                  
               </div> <!--  end featured items -->
            </div>
         </div>
         <!-- Have to have a form here! -->
         <apex:form >
            <c:DisabledFeatureOverlay isFree="{!isFree}" verifyAction="{!verifyEdition}" />
         </apex:form>
      </div> 

   </div>
   
   <script>
      nitroLibsVersion = "current"; 
   </script>
   <script src="https://assets2.bunchball.net/scripts/nitro/{!buildVersion}/nitro.js" type="text/javascript"></script>    
   <script type="text/javascript">
      var connectionParams={};
      connectionParams.userId = '{!JSENCODE(NitroUserId)}';                
      connectionParams.apiKey = '{!JSENCODE(APIKey)}';
      connectionParams.sessionKey = '{!SessionKey}';
      connectionParams.server = '{!JSENCODE(Endpoint)}'; 
      var nitro2 = new Nitro(connectionParams);    
    
      // wait till the DOM loads to kick this stuff off
      nitro$(function() {
         var $ = nitro$;
         
         var pointsName = '{!pointsName}';          
      
         // The Roles are being provided by SFDC. Use these to populate the left listbox. 
         // The Role ID should be the select option ID, and the name should be what the user sees. 
         // These are already alphabetically sorted. There is a special entry up top called '** EVERYONE **' 
         // Whenever a user clicks on a Role in this list, a call will be made to Nitro to get the 
         // featuredItem preferences for this Role, and then all the challenge and reward combo-boxes
         // will be updated appropriated. 
         var roles = eval("{!JSENCODE(Roles)}");
         for (var i=0; i < roles.length; i++) {
            // fields are id and name. 
            var roleId = roles[i].id;
            var roleName = roles[i].name;
            
            // write out some li's, sweet little li's
            $("#nitro_sf_admin_featured_items_role_list ul").append("<li data-role-id='"+roleId+"'>"+roleName+"</li>");
   
         }
         
         // highlight the first role
         $("#nitro_sf_admin_featured_items_role_list ul li:first").addClass('active'); 
   
         // get the data for the first role
         getFeaturedItems($("#nitro_sf_admin_featured_items_role_list ul li:first").data('role-id'));
   
         // attach click actions to each li
         $("#nitro_sf_admin_featured_items_role_list ul li").click(function() {
            $("#nitro_sf_admin_featured_items_role_list ul li").removeClass('active');
            $(this).addClass("active").addClass('loading');
            getFeaturedItems($(this).data('role-id'))
         });
   
          
         // get the Rewards. Used to populate the Rewards combobox. 
         // these are ordered by descending cost. 
         // There is a special one at the top of the list called '** NONE **' which means that
         // there is no Featured Reward for this role.
         var rewards = eval("{!JSENCODE(Rewards)}");
         for (var i=0; i < rewards.length; i++) {
            // fields are id, name, picture, cost and quantity. 
            // the select option id should have the picture (because we'll need it later)
            // the user will see "Reward Name: XXX pointsName (Y available)
            var rewardId = rewards[i].id;
            var rewardName = rewards[i].name;
            var rewardPicture = rewards[i].picture;
            var rewardCost = rewards[i].cost;
            var rewardQty = rewards[i].quantity;
            
            $("#nitro_sf_admin_featured_items_reward select").append("<option value='"+rewardName+"' data-reward-cost='"+rewardCost+"' data-reward-qty='"+rewardQty+"' data-reward-id='"+rewardId+"' data-reward-picture='"+rewardPicture+"'>"+rewardName+"</option>");
         } 
            
         //add an event listener to this when it changes
         $("#nitro_sf_admin_featured_items_reward select").change(function() {
            loadFeaturedRewardInfo(this);
         });       
         
         
         // get the Challenges. Used to populate all 3 Challenge comboboxes. 
         // these are ordered however Nitro returns them. 
         // There is a special one at the top of the list called '** SPARK PICKS **' which means
         // that Nitro will pick using user.getNextChallenge;
         var challenges = unescape("{!JSENCODE(Challenges)}"); 
         var challengeArray = challenges.split("__");
         for (var i=0; i < challengeArray.length; i++) {
            // no fields, just the challenge name. 
            var challengeName = challengeArray[i];
            $("#nitro_sf_admin_featured_items_challenges select").append("<option value='"+challengeName+"'>"+challengeName+"</option>");
         }
          
         //add a click listener to the save button
         $("#save_featured_item_btn").click(function(){
            saveFeaturedItems();
            showSavingLoader();
         });
          
         //
         initChallengeSelectRestrictions();
      });

       
      /***********
       * HANDLE USER INTERACTIONS    
       * user has clicked on a Role. Request the Appropriate preferences and select the appropriate
       * items in the challenge and reward comboboxes.
      ************/  
      function initChallengeSelectRestrictions() {
         //TODO: finish this
   /*       var $ = nitro$;
         
         $("#nitro_sf_admin_featured_items_challenges select").change(function() {
         
            var selectIndex = $("#nitro_sf_admin_featured_items_challenges select").index($(this));
            
            if (selectIndex == 0) {
               //if this value is ** SPARK PICKS ** and the other selects have values that arent ** SPARK PICKS **...move them up.
               
            }
            //if this index is greater than 0
            else if(selectIndex > 0) {
               //if first index is ** SPARK PICKS **     
               if($("#nitro_sf_admin_featured_items_challenges select:first").val() == "** NITRO PICKS **"){
                  alert("hey")               
               }
            }
         });
    */   }
      
      function getFeaturedItems(roleId) {
         nitro2.callAPI("method=site.getPreference&name=featuredChallenges_RoleID" + roleId + "&asyncToken=featuredChallenges", "processResult");
         nitro2.callAPI("method=site.getPreference&name=featuredReward_RoleID" + roleId + "&asyncToken=featuredReward", "processResult");
         return true;
      }
       
      
      function loadFeaturedRewardInfo(el) {
         var $ = nitro$;
         
         $(".nitro_sf_admin_featured_reward_info").remove();
         var img = $(el).find('option:selected').data('reward-picture');
         var qty = $(el).find('option:selected').data('reward-qty');
         var cost = $(el).find('option:selected').data('reward-cost');
         var image = "";
         
         if (img != "" && img != null && typeof img != 'undefined'){
            var image = "<div class='nitro_sf_admin_featured_reward_image'><img src='"+img+"' /></div>"
         }  
            
         var html = "<div class='nitro_sf_admin_featured_reward_info'>" +
                     image +
                     "<div class='nitro_sf_admin_featured_reward_text'>" +
                        "<h3>Number Remaining: <br/><span>"+qty+"</span></h3>" +
                        "<h3>Cost: <br/><span>"+cost+"</span></h3>" +
                     "</div>";
                  "</div>";
       
         $(el).after(html);
      }
      
      function showSavingLoader() {
         nitro$("#save_featured_item_btn").hide();
         nitro$("#save_load_indicator").show();
      }
      
      function hideSavingLoader() {
         nitro$("#save_featured_item_btn").show();
         nitro$("#save_load_indicator").hide();
      }
   
   
      /***********
      * 
      ************/  
      function processResult(data) {
         var $ = nitro$;
         
         //remove any loading indicators on the left nav
         $("#nitro_sf_admin_featured_items_role_list ul li").removeClass('loading');      
      
         if (data == null) {
            //alert ('Error');
            return;
         }
         if (data.Nitro.res == "err") {
            //alert (data.Nitro.Error.Message);
            return;
         }
         
         switch (data.Nitro.method) {
            case "site.getPreference": 
               switch (data.Nitro.asyncToken) {
                  case "featuredChallenges":
                     parseFeaturedChallenges(data);         
                  break;
                  case "featuredReward":
                     parseFeaturedReward(data);
                  break;
               }        
               break;
         }
      }        
   
   
      /***********
      * Parse featured rewards data
      ************/  
      function parseFeaturedReward(data){
         var $ = nitro$;
         
         var featuredReward = (typeof data.Nitro.sitePreferences == 'object') ? data.Nitro.sitePreferences.SitePreference.value : "";
         var el = $("#nitro_sf_admin_featured_items_reward select");
         
         if(featuredReward != "") {
            el.val(featuredReward.split('__')[0])
         } else{
            el.find(':nth-child(1)').attr('selected','selected');
         }
         
         loadFeaturedRewardInfo(el);
      }
      
      
      function parseFeaturedChallenges(data){
         var $ = nitro$;
         
         var featuredChallenges;    
         if (typeof data.Nitro.sitePreferences == 'object') {
            featuredChallenges = data.Nitro.sitePreferences.SitePreference.value;
         } else {
            featuredChallenges = "";
         }
         
         // use double underscore as the delimiter. 
         featuredChallenges = featuredChallenges.split("__");
         var selectOptionNum = 1;
          
         // reset the select boxes
         $("#nitro_sf_admin_featured_items_challenges select").find(':nth-child(1)').attr('selected','selected');
   
         for (var i=0; i<featuredChallenges.length; i++) {
            if (featuredChallenges[i] != "") {
               $("#nitro_sf_admin_featured_items_challenge_selection_"+selectOptionNum).val(featuredChallenges[i]);
               // select items in the 3 challenge comboboxes using these entries.
               selectOptionNum += 1;
            }
         }
      }
      
      /***********
       * user has hit Save. Make a JS Remoting call to Apex to save the selections. 
      ************/  
      function saveFeaturedItems() {
         var $ = nitro$;
             
         // get the current roleId
         var roleId = $("#nitro_sf_admin_featured_items_role_list ul li.active").data('role-id');
         
         // get the current selected featured Challenges
         var featuredChallenge1 = $("#nitro_sf_admin_featured_items_challenge_selection_1").val();
         var featuredChallenge2 = $("#nitro_sf_admin_featured_items_challenge_selection_2").val();; 
         var featuredChallenge3 = $("#nitro_sf_admin_featured_items_challenge_selection_3").val();
   
         // get the featured reward id and picture 
         var featuredRewardName = $("#nitro_sf_admin_featured_items_reward_selection").val(); 
         var featuredRewardPicture = $("#nitro_sf_admin_featured_items_reward_selection option:selected").data('reward-picture'); 
       
         // call into Apex to save them. Show a waiting indicator while this happens. 
         /* */ nitro.NitroFeaturedItems.saveFeaturedItems( roleId, featuredChallenge1, featuredChallenge2, featuredChallenge3, featuredRewardName, featuredRewardPicture, saveFeaturedItemsCallback);
      }
      
      
      /***********
      * 
      ************/  
      // JS Remoting has returned, and will tell us if we were successful or not.   
      function saveFeaturedItemsCallback(result, event) {
         var $ = nitro$;
         
         hideSavingLoader();
         
         if (event.status) {
            // successful remoting call         
            if (result)  {
               // the Nitro call was also successful. 
               // message to the user that it was successful.
               $("#nitro_sf_admin_featured_items_right_column").prepend("<h4 class='happymessage'>Your Featured Items Have Been Saved!</h4>").slideDown();
               setTimeout(function() {
                  $("h4.happymessage").slideUp('slow',function(){ $(this).remove() });
               },4000)
            }
            else {
               // the Nitro call errored. 
               alert ("There was an error saving your featured items. Please try again");
            }
         }
         else {
            // do nothing. 
            alert ("There was a problem saving your Featured Items");
         }
      }  
   </script>
 
</apex:page>